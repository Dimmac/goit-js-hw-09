{"version":3,"sources":["js/03-promises.js"],"names":["createPromise","position","delay","Math","random","refs","document","querySelector","step","amount","submit","console","log"],"mappings":";AAAA,SAASA,EAAcC,EAAUC,GACTC,KAAKC,SAQ7B,MAAMC,EAAO,CACXH,MAAOI,SAASC,cAAc,UAC9BC,KAAMF,SAASC,cAAc,SAC7BE,OAAQH,SAASC,cAAc,WAC/BG,OAAQJ,SAASC,cAAc,YAEjCI,QAAQC,IAAIP,EAAKH","file":"03-promises.4b91e1de.js","sourceRoot":"../src","sourcesContent":["function createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  if (shouldResolve) {\n    // Fulfill\n  } else {\n    // Reject\n  }\n}\n\nconst refs = {\n  delay: document.querySelector('.delay'),\n  step: document.querySelector('.step'),\n  amount: document.querySelector('.amount'),\n  submit: document.querySelector('.submit'),\n};\nconsole.log(refs.delay);\n\n// refs.submit.addEventListener('click', () => {\n//   function();\n// });\n\n// const promise = new Promise((resolve, reject) => {\n//   const canFulFill = Math.random() > 0.5;\n\n//   setTimeout(() => {\n//     if (canFulFill) {\n//       resolve('Промис выполнился успешно, с результатом fulfilled');\n//     }\n//     reject('Промис виполнілся с ошібкой - отклонен, rejected');\n//   }, 1000);\n// });\n// console.log(promise);\n\n// promise.then(\n//   result => {\n//     console.log(result);\n//   },\n//   error => {\n//     console.log(error);\n//   },\n// );\n// promise\n//   .then(result => {\n//     console.log(result);\n//     return 5;\n//   })\n//   .then(x => {\n//     console.log(x);\n//     return 88;\n//   })\n//   .then(y => {\n//     console.log(typeof y);\n//   })\n//   .catch(error => console.log(error))\n//   .finally(() => console.log('Я буду виполнен в любом с лучае'));\n\n// fetch('https://pokeapi.co/api/v2/pokemon/2')\n//   .then(r => r.json())\n//   .then(pokemon => {\n//     console.log(pokemon);\n//   })\n//   .catch(error => console.log(error));\n// const makePromise = () => {\n//   return new Promise((resolve, reject) => {\n//     const passed = Math.random() > 0.5;\n\n//     setTimeout(() => {\n//       if (passed) {\n//         resolve('Куку, єто Resolve');\n//       }\n//       reject('ITS A REJECT!!!');\n//     }, 1000);\n//   });\n// };\n\n// makePromise()\n//   .then(result => console.log(result))\n//   .catch(error => console.log(error));\n"]}